16. Create VIEW for Stocks with Threshold Price Query: Create a VIEW for stocks that have a closing price above a certain threshold. 
Use this VIEW to get details of these stocks, including their company names. 

 create view closing_price_above_900_view
 as
 select * from stocks where closing_price > 900

 select a.*,b.name from closing_price_above_900_view a natural join companies b

17. Create VIEW with Company Names Query: Create a VIEW that shows all stocks along with their company names. Query this VIEWto list all stocks and their company names. 

create view stocks_with_companyname_view
as
select a.*,b.name from stocks a natural join companies b

select * from stocks_with_companyname_view

18. Create VIEW and Update Original Table
 Query: Create a VIEW for all stocks and their closing prices. Insert a new record into the VIEW and verify if the new record is reflected in the original Stocks table.


create view stocks_with_closingprice
 as
 select * from stocks

insert into stocks_with_closingprice values(407,100,'2024-01-01',777,888)
 
select * from stocks where stock_id = 407

19. Create VIEW for Lowest Opening Price Query: Create a VIEW to find the stock with the lowest opening price. After creating the VIEW, use it to get details of this stock,
including its company name. 

 

 
20. Create VIEW for Specific Company Stocks
Query: Create a VIEW to list stocks for a specific company based on its Company_ID. Query this VIEW to get the stocks for the specified company. 

create view stocks_of_company7
as
select * from stocks where company_id = 7;

select * from stocks_of_company7


 

 





21. Join and Aggregate Function Query: Calculate the total dividend paid by each company and sort the results in descending order.

select a.name,coalesce(sum(b.amount), 0) as dividend_paid
 from companies a left join dividends b
 on a.company_id = b.company_id
 group by a.name
 order by dividend_paid desc;

22. Subquery in SELECT Clause 
Query: List the names of investors and their total portfolio value, which is calculated by summing all portfolio values for each investor. 

select name,portfolio_value from investors;


23 Join with Multiple Conditions 
Query: Find all transactions for stocks in the 'Healthcare' and 'Finance' sectors and list the stock name, company name, and transaction date. 

SELECT a.date, a.stock_id, c.name
 FROM transactions a
 JOIN stocks b ON a.stock_id = b.stock_id
 JOIN companies c ON b.company_id = c.company_id
 WHERE c.sector = 'Healthcare' OR c.sector = 'Finance';

24. Using EXISTS with Subquery
 Query: List the names of investors who have invested in at least one stock from a company with a market cap greater than $500 million. 

select * from investors i where exists (
 select 1 from transactions a,stocks b,companies c
where a.stock_id = b.stock_id
 and b.company_id = c.company_id
 and i.investor_id = a.investor_id
 and c.market_cap > 5000000000
 )

25. Self Join 

Query: Find pairs of companies where both companies are in the 'Technology' sector and have similar market caps (difference less than $100 million). 

SELECT c1.name AS company1, c2.name AS company2
FROM companies c1
JOIN companies c2
ON c1.sector = 'Technology'
   AND c2.sector = 'Technology'
   AND c1.name < c2.name
   AND ABS(c1.market_cap - c2.market_cap) < 100000000

26. Create VIEW for Investor Details

 Query: Create a VIEW that lists all investors and their total portfolio value. Use this VIEW to find investors with a total portfolio value above $1 million. 


CREATE VIEW investor_portfolio_values AS
SELECT name, SUM(portfolio_value) AS total_portfolio_value
FROM investors
GROUP BY name;

SELECT name, total_portfolio_value
FROM investor_portfolio_values
WHERE total_portfolio_value > 1000000;
 



27. Create VIEW for Active Companies
 Query: Create a VIEW that shows companies with more than 5 stocks listed. Use this VIEW to get the names of these companies.


create view companies_having_more_than_5_stocks_view
 as
 select * from companies
 where company_id in (
 select company_id
 from stocks
 group by company_id
 having count(stock_id) > 5
 );

select name from companies_having_more_than_5_stocks_view;


28. Create VIEW for Transaction Summary
 Query: Create a VIEW that summarizes the total transaction count and average transaction quantity for each company. Use this VIEW to find the company with the highest average transaction quantity. 

create view transaction_summary_view
 as
select c.name,count(a.transaction_id) as total_trans,sum(a.quantity) as
 avg_trans
 from transactions a join stocks b on a.stock_id = b.stock_id
 join companies c on b.company_id = c.company_id
 group by c.name


29. Create VIEW for Companies with High Dividends 
Query: Create a VIEW that lists companies that have paid more than $10 million in dividends. Use this VIEW to list the details of these companies.

create view company_paid_morethan_10m as
 select
 a.company_id,
 a.name,
 sum(b.amount) as total_dividends_paid
 from
companies a
 join
 dividends b on a.company_id = b.company_id
 group by
 a.company_id, a.name
 having
 sum(b.amount) > 10000000;

select * from company_paid_morethan_10m
 
30. Create VIEW for Stocks and Transactions 
Query: Create a VIEW that lists all stocks along with their total transaction quantities. Use this VIEW to find the top 5 stocks with the highest transaction quantities
